# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ProductCatalogService API
    version: 0.0.1
paths:
    /v1/product:
        post:
            tags:
                - ProductCatalogService
            operationId: ProductCatalogService_CreateProduct
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Product'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ProductCatalogService
            operationId: ProductCatalogService_DeleteProduct
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: owner
                  in: query
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ProductCatalogService
            operationId: ProductCatalogService_UpdateProduct
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Product'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/product/list:
        get:
            tags:
                - ProductCatalogService
            description: 查询商品列表
            operationId: ProductCatalogService_ListProducts
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: categoryName
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProductsResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/products/search/{query}:
        get:
            tags:
                - ProductCatalogService
            description: 根据字符串查询商品
            operationId: ProductCatalogService_SearchProducts
            parameters:
                - name: query
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchProductsResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/products/{id}:
        get:
            tags:
                - ProductCatalogService
            description: 查询某个商品详细信息
            operationId: ProductCatalogService_GetProduct
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProductResp'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        GetProductResp:
            type: object
            properties:
                product:
                    $ref: '#/components/schemas/Product'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListProductsResp:
            type: object
            properties:
                products:
                    type: array
                    items:
                        $ref: '#/components/schemas/Product'
        Product:
            required:
                - name
                - description
                - picture
                - price
                - categories
                - owner
                - username
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                picture:
                    type: string
                price:
                    type: number
                    format: float
                categories:
                    type: array
                    items:
                        type: string
                owner:
                    type: string
                username:
                    type: string
                id:
                    type: integer
                    format: uint32
        ProductReply:
            type: object
            properties:
                message:
                    type: string
                code:
                    type: integer
                    format: int32
            description: |-
                message CreateProductReq {
                   string name = 1 [(google.api.field_behavior) = REQUIRED];
                   string description = 2 [(google.api.field_behavior) = REQUIRED];
                   string picture = 3 [(google.api.field_behavior) = REQUIRED];
                   float price = 4 [(google.api.field_behavior) = REQUIRED];
                   repeated string categories = 5 [(google.api.field_behavior) = REQUIRED];
                   string owner = 6 [(google.api.field_behavior) = REQUIRED];
                   string username = 7 [(google.api.field_behavior) = REQUIRED];
                 }
        SearchProductsResp:
            type: object
            properties:
                products:
                    type: array
                    items:
                        $ref: '#/components/schemas/Product'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
tags:
    - name: ProductCatalogService
