syntax = "proto3";

package product.service.v1;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";

option go_package = "api/product/v1;product";

service ProductCatalogService {
  rpc CreateProduct(Product) returns (ProductReply) {
    option (google.api.http) = {
      post: "/v1/product",
      body: "*"
    };
  }
  rpc UpdateProduct(Product) returns (ProductReply) {
    option (google.api.http) = {
      patch: "/v1/product",
      body: "*"
    };
  }
  rpc ListProducts(ListProductsReq) returns (ListProductsResp) {
    option (google.api.http) = {
      get: "/v1/product/list"
    };
  }
  rpc GetProduct(GetProductReq) returns (ProductReply) {
    option (google.api.http) = {
      get: "/v1/product/{id}"
    };
  }
  rpc SearchProducts(SearchProductsReq) returns (SearchProductsResp) {
    option (google.api.http) = {
      get: "/v1/product/search/{query}"
    };
  }
}

message Product {
  uint32 id = 1;
  string name = 2;
  string description = 3;
  string picture = 4;
  float price = 5;
  uint32 stock = 6;
  string categoryID = 7;
  google.protobuf.Duration created_at = 8;
  google.protobuf.Duration updated_at = 9;
}

message ProductReply {
  Product product = 1 ;
}

message ListProductsReq{
  int32 page = 1;
  int64 pageSize = 2 [json_name = "page_size"];

  string categoryName = 3 [json_name = "category_name"];
}

message ListProductsResp {
  repeated Product products = 1;
}

message GetProductReq {
  uint32 id = 1;
}

message SearchProductsReq {
  string query = 1;
}

message SearchProductsResp {
  repeated Product results = 1;
}
