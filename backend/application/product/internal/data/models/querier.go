// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package models

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	//CreateProduct
	//
	//  INSERT INTO products.products (name,
	//                                 description,
	//                                 picture,
	//                                 price,
	//                                 stock,
	//                                 category_id)
	//  VALUES ($1, $2, $3, $4, $5,$6)
	//  RETURNING id, name, description, picture, price, stock, category_id, created_at, updated_at
	CreateProduct(ctx context.Context, arg CreateProductParams) (ProductsProducts, error)
	//DeleteProduct
	//
	//  DELETE
	//  FROM products.products
	//  WHERE id = $1
	DeleteProduct(ctx context.Context, id uuid.UUID) error
	//GetProduct
	//
	//  SELECT id, name, description, picture, price, stock, category_id, created_at, updated_at
	//  FROM products.products
	//  WHERE id = $1
	//  LIMIT 1
	GetProduct(ctx context.Context, id uuid.UUID) (ProductsProducts, error)
	//ListProducts
	//
	//  SELECT id, name, description, picture, price, stock, category_id, created_at, updated_at
	//  FROM products.products
	//  ORDER BY created_at DESC
	//  LIMIT $1 OFFSET $2
	ListProducts(ctx context.Context, arg ListProductsParams) ([]ProductsProducts, error)
	//LockProductStock
	//
	//  SELECT stock
	//  FROM products.products
	//  WHERE id = $1
	//      FOR UPDATE
	LockProductStock(ctx context.Context, id uuid.UUID) (int32, error)
	//UpdateProduct
	//
	//  UPDATE products.products
	//  SET name        = COALESCE($2, name),
	//      description       = COALESCE($3, description),
	//      picture       = COALESCE($4, picture),
	//      price       = COALESCE($5, price),
	//      stock       = COALESCE($6, stock),
	//      category_id = COALESCE($7, category_id)
	//  WHERE id = $1
	//  RETURNING id, name, description, picture, price, stock, category_id, created_at, updated_at
	UpdateProduct(ctx context.Context, arg UpdateProductParams) (ProductsProducts, error)
	//UpdateProductStock
	//
	//  UPDATE products.products
	//  SET stock = $2
	//  WHERE id = $1
	UpdateProductStock(ctx context.Context, arg UpdateProductStockParams) error
}

var _ Querier = (*Queries)(nil)
